{"version":3,"sources":["Components/Template/VideoBox.js","Components/Template/Form.js","Components/Redux/Actions.js","Components/Redux/Middleware.js","Components/Redux/Reducer.js","Components/Redux/Store.js","Components/Redux/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","ChannelTitle","a","VideoTitle","VideoBox","video","swipe","useSelector","state","translation","style","transform","src","snippet","thumbnails","medium","url","href","id","videoId","title","channelId","channelTitle","VideoContainer","ButtonContainer","StyledForm","form","Input","input","LoadButton","button","SwipeButtonNext","SwipeButtonPrevious","Form","dispatch","useDispatch","videos","currentPage","startValue","endValue","placeholder","onChange","event","type","payload","target","value","onClick","preventDefault","length","map","disabled","rootMiddleware","composeWithDevTools","applyMiddleware","store","next","action","inputValue","getState","pageToken","fetch","then","res","json","data","items","nextPageToken","catch","initialState","loading","localStorage","createStore","previousPage","App","subscribe","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"myBAGA,IAAMA,EAAYC,IAAOC,IAAV,KAWTC,EAAeF,IAAOG,EAAV,KAQZC,EAAaJ,IAAOG,EAAV,KAOT,SAASE,EAAT,GAA4B,IAATC,EAAQ,EAARA,MAChBC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eACzC,OACI,kBAACX,EAAD,CAAWY,MAAO,CAACC,UAAU,cAAD,OAAgBL,EAAhB,SACxB,yBAAKM,IAAKP,EAAMQ,QAAQC,WAAWC,OAAOC,MAC1C,kBAACb,EAAD,CAAYc,KAAI,0CAAqCZ,EAAMa,GAAGC,UAA9D,UACQd,EAAMQ,QAAQO,QAEtB,kBAACnB,EAAD,CAAcgB,KAAI,0CAAqCZ,EAAMQ,QAAQQ,YAArE,UACQhB,EAAMQ,QAAQS,eAEtB,+B,ikDClCMvB,IAAOC,IAAV,KAAf,IAIMuB,EAAiBxB,IAAOC,IAAV,KASdwB,EAAkBzB,IAAOC,IAAV,KAMfyB,EAAa1B,IAAO2B,KAAV,KAIVC,EAAQ5B,IAAO6B,MAAV,KAWLC,EAAa9B,IAAO+B,OAAV,KAWVC,EAAkBhC,IAAO+B,OAAV,KAafE,EAAsBjC,IAAO+B,OAAV,KAcZG,EAAO,WAEhB,IAAMC,EAAWC,cACXC,EAAS7B,aAAY,SAAAC,GAAK,OAAIA,EAAM4B,UAGpCC,GAFa9B,aAAY,SAAAC,GAAK,OAAIA,EAAM8B,cAC7B/B,aAAY,SAAAC,GAAK,OAAIA,EAAM+B,YACxBhC,aAAY,SAAAC,GAAK,OAAIA,EAAM6B,gBAC3B9B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eA0B/C,OACI,6BACI,kBAACgB,EAAD,KACI,kBAACE,EAAD,CAAOa,YAAa,mBAAoBC,SA3BhC,SAACC,GACnB,OAAOR,EAAS,CAACS,KAAM,kBAAmBC,QAASF,EAAMG,OAAOC,WA2BtD,kBAACjB,EAAD,CAAYkB,QAzBL,SAACL,GClFjB,IAAkBE,EDmFjBF,EAAMM,iBACLd,ECnFE,CACHS,KAViB,YAWjBC,QAASA,MDwGD,gBAEJ,kBAACrB,EAAD,KACuB,IAAlBa,EAAOa,OAAa,GAAGb,EAAOc,KAAI,SAAA7C,GAAK,OAAG,kBAACD,EAAD,CAAUC,MAAOA,QAEhE,kBAACmB,EAAD,KACA,kBAACQ,EAAD,CAAqBmB,SAA0B,IAAhBf,EAAOa,QAA4B,IAAdZ,EAAiCU,QAvBxE,WACjBb,EAAS,CAACS,KAAM,gBAAiBC,QAA2B,IAAlBR,EAAOa,OAAa,GAAGb,EAAOc,KAAI,SAAA7C,GAAK,OAAG,kBAACD,EAAD,CAAUC,MAAOA,WAsBY,MAC7G,kBAAC0B,EAAD,CAAiBoB,SAA0B,IAAhBf,EAAOa,OAA4BF,QA5BrD,WACbb,EAAS,CAACS,KAAM,YAAaC,QAA2B,IAAlBR,EAAOa,OAAa,GAAGb,EAAOc,KAAI,SAAA7C,GAAK,OAAG,kBAACD,EAAD,CAAUC,MAAOA,WA2BX,S,eE3FjF+C,EAAiBC,8BAAoBC,2BA5B1B,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAAW,IACxCC,EAAeH,EAAMI,WAArBD,WACAE,EAAcL,EAAMI,WAApBC,UDLa,cCMdH,EAAOd,MAEVkB,MAAM,oIAAD,OAAqIH,IACzII,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACZF,MAAK,SAAAG,GACF,IAAMR,EDIX,CACHd,KAfyB,oBAgBzBC,QCNuC,CAACR,OAAQ6B,EAAKC,MAAON,UAAWK,EAAKE,gBACpEZ,EAAMrB,SAASuB,MAGlBW,OAAM,WDKZ,IAAsBxB,ECJjBW,EAAMrB,SDKP,CACHS,KApBsB,iBAqBtBC,QAASA,OAnBQ,cCelBa,EAAOd,MACNkB,MAAM,oIAAD,OAAqIH,EAArI,sBAA6JE,IACjKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMR,EDyBP,CACHd,KA3CsB,YA4CtBC,QC3BgC,CAACR,OAAQ6B,EAAKC,MAAON,UAAWK,EAAKE,gBACjEZ,EAAMrB,SAASuB,MAIvBD,EAAKC,S,eCnBHY,EAAe,CACjBjC,OAAQ,GACRkC,SAAS,EACTZ,WAAY,GAGZjD,YAAa,EACbmD,UAAW,GACXW,aAAc,ICdX,IAAMhB,EAAQiB,uBDiBd,WAAqD,IAA/BhE,EAA8B,uDAAtB6D,EAAcZ,EAAQ,uCACvD,OAAOA,EAAOd,MACV,IFtBiB,YEuBb,OAAO,eACAnC,EADP,CAEI8D,SAAS,IAGjB,IF3ByB,oBE4BrB,OAAO,eACA9D,EADP,CAEI4B,OAAO,YAAKqB,EAAOb,QAAQR,QAC3BwB,UAAWH,EAAOb,QAAQgB,UAC1BU,SAAS,EACTjC,YAAa,EACboC,cAAe,EACfhE,YAAa,IAGrB,IFrCsB,iBEsClB,OAAO,eACAD,EADP,CAEI8D,SAAS,IAGjB,IF1CuB,kBE2CnB,OAAO,eACA9D,EADP,CAEIkD,WAAYD,EAAOb,UAG3B,IF/CiB,YEgDb,OAAO,eACApC,EADP,CAEI6B,YAAa7B,EAAM6B,YAAc,EACjCoC,aAAcjE,EAAMiE,aAAe,EACnChE,aAAc,KAAKD,EAAM6B,cAGjC,IFtDqB,gBEuDjB,OAAO,eACA7B,EADP,CAEI6B,YAAa7B,EAAM6B,YAAc,EACjCoC,aAAcjE,EAAMiE,aAAe,EACnChE,aAAc,KAAKD,EAAMiE,eAGjC,IF7DsB,YE8DlB,OAAO,eACAjE,EADP,CAEI4B,OAAO,GAAD,mBAAM5B,EAAM4B,QAAZ,YAA2BqB,EAAOb,QAAQR,SAChDwB,UAAWH,EAAOb,QAAQgB,UAC1BtB,YAAa,EACbC,SAAU,IAIlB,IFtE0B,qBEuEtB,OAAO,eACA/B,EADP,CAEI4B,OAAQ,CAACqB,EAAOb,SAChBN,WAAY,GACZC,SAAU,KAGlB,QAAS,OAAO/B,KClFuB4C,GCFhCG,ICcAmB,MATf,WAEE,OADEnB,EAAMoB,WAAU,kBAAKC,QAAQC,IAAItB,EAAMI,eAEvC,6BACE,kBAAC,EAAD,QCEcmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,IAAD,CAAU7B,MAAOA,GAAO,kBAAC,EAAD,OAAoB8B,SAASC,eAAe,SD2H9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,MAAK,SAAA4B,GACjCA,EAAaC,kB","file":"static/js/main.b68e8a4c.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {useSelector} from 'react-redux'\nconst Container = styled.div`\nposition: relative;\ndisplay: flex;\nflex-flow: column nowrap;\nwidth: 320px;\nheight: 300px;\ntransition: transform 0.8s ease;\nmargin: 40px;\nborder-radius: 10%;\n`\n\nconst ChannelTitle = styled.a`\ntext-decoration: none;\nfont-weight: 700;\nfont-size: 15px;\nmargin: auto;\ncolor: rgba(0,0,0, 0.7)\n`\n\nconst VideoTitle = styled.a`\ntext-decoration: none;\nfont-weight: 500;\nfont-size: 15px;\nmargin: auto;\ncolor: black;\n`\nexport function VideoBox({video}) {\n    const swipe = useSelector(state => state.translation)\n    return (\n        <Container style={{transform: `translateX(${swipe}px)`}}>\n            <img src={video.snippet.thumbnails.medium.url} ></img>\n            <VideoTitle href={`https://www.youtube.com/watch?v=${video.id.videoId}`}>\n                {`${video.snippet.title}`}\n            </VideoTitle>\n            <ChannelTitle href={`https://www.youtube.com/channel/${video.snippet.channelId}`}>\n                {`${video.snippet.channelTitle}`}\n            </ChannelTitle>\n            <div>\n                {/* {`${video.snippet.description}`} */}\n            </div>\n        </Container>\n    )\n}","import React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {getVideo, loadVideos, NEXT_PAGE} from '../Redux/Actions'\nimport styled from 'styled-components'\nimport { VideoBox } from './VideoBox'\n\nconst Container = styled.div`\n\n`\n\nconst VideoContainer = styled.div`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  max-width: 1600px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\nflex-flow: row-nowrap;\n`\n\n\nconst StyledForm = styled.form`\ndisplay: flex;\njustify-content: center\n`\nconst Input = styled.input`\nborder-top-left-radius: 5px;\nborder-bottom-left-radius: 5px;\nborder-width: 2px;\nborder-color: red;\nwidth: 500px;\nheight: 44px;\nfont-size: 25px;\nfont-family: lobster\n`\n\nconst LoadButton = styled.button`\nborder-top-right-radius: 5px;\nborder-bottom-right-radius: 5px;\nborder: none;\nbackground-color: red;\ncolor: white;\nwidth: 180px;\nheight: 50px;\n\n`\n\nconst SwipeButtonNext = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    color: #fff;\n    text-align: center;\n    opacity: 0.5;\n    height: 50px;\n    background: rgba(0, 0, 0, 0.5);\n    right: 0;\n    margin: auto;\n`\nconst SwipeButtonPrevious = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    color: #fff;\n    text-align: center;\n    opacity: 0.5;\n    height: 50px;\n    background: rgba(0, 0, 0, 0.5);\n    left: 0;\n    margin: auto;\n    \n`\nexport const Form = () => {\n    \n    const dispatch = useDispatch()\n    const videos = useSelector(state => state.videos)\n    const startValue = useSelector(state => state.startValue)\n    const endValue = useSelector(state => state.endValue)\n    const currentPage = useSelector(state => state.currentPage)\n    const translation = useSelector(state => state.translation)\n\n    const inputSearch = (event) => {\n      return dispatch({type: 'SET_INPUT_VALUE', payload: event.target.value })\n    }\n    const loadVideos = (event) => {\n        event.preventDefault()\n         dispatch(getVideo())\n    }\n    const nextPage = () => {\n        dispatch({type: 'NEXT_PAGE', payload: videos.length === 0?'':videos.map(video=> <VideoBox video={video}></VideoBox>) })\n    }\n\n    const previousPage = () => {\n        dispatch({type: 'PREVIOUS_PAGE', payload: videos.length === 0?'':videos.map(video=> <VideoBox video={video}></VideoBox>) })\n    }\n// const setVideo = () => {\n//     if(videos.length === 0) {\n//         return ''\n//     } else {\n//         return videos[0].items.filter((el, index) => index>startValue && index<=endValue ? el : '' )\n//     }\n// }\n// const videosArray = setVideo()\n\n    \n    return (\n        <div>\n            <StyledForm>\n                <Input placeholder={'Search videos...'} onChange={inputSearch}></Input>\n                <LoadButton onClick={loadVideos}>Load Videos</LoadButton>\n            </StyledForm>\n            <VideoContainer> \n                {videos.length === 0?'':videos.map(video=> <VideoBox video={video}></VideoBox>)}\n            </VideoContainer>\n            <ButtonContainer>\n            <SwipeButtonPrevious disabled={videos.length===0 || currentPage===1 ? true : false}  onClick={previousPage}>{'<='}</SwipeButtonPrevious>\n            <SwipeButtonNext disabled={videos.length===0 ? true : false}  onClick={nextPage}>{'=>'}</SwipeButtonNext>\n            </ButtonContainer>                       \n        </div>\n    )\n}\n","export const GET_VIDEO = 'GET_VIDEO'\nexport const GET_VIDEO_SUCCESS = 'GET_VIDEO_SUCCESS'\nexport const GET_VIDEO_FAIL = 'GET_VIDEO_FAIL'\nexport const SET_INPUT_VALUE = 'SET_INPUT_VALUE'\nexport const NEXT_PAGE = 'NEXT_PAGE'\nexport const PREVIOUS_PAGE = 'PREVIOUS_PAGE'\nexport const LOAD_NEXT_PAGE = 'LOAD_MORE'\nexport const LOAD_PREVIOUS_PAGE = 'LOAD_PREVIOUS_PAGE'\nexport function getVideo(payload) {\n    return {\n        type: GET_VIDEO,\n        payload: payload\n    }\n}\nexport function getVideoSuccess(payload) {\n    return {\n        type: GET_VIDEO_SUCCESS,\n        payload: payload\n    }\n}\nexport function getVideoFail(payload) {\n    return {\n        type: GET_VIDEO_FAIL,\n        payload: payload\n    }\n}\nexport function setInputValue(payload) {\n    return {\n        type: SET_INPUT_VALUE,\n        payload: payload\n    }\n}\n\nexport function nextPage(payload) {\n    return {\n        type: NEXT_PAGE,\n        payload: payload\n    }\n}\n\nexport function previousPage(payload) {\n    return {\n        type: PREVIOUS_PAGE,\n        payload: payload\n    }\n}\n\nexport function loadNextPage(payload) {\n    return {\n        type: LOAD_NEXT_PAGE,\n        payload: payload\n    }\n}\n\n\nexport function loadPreviousPage(payload) {\n    return {\n        type: LOAD_PREVIOUS_PAGE,\n        payload: payload\n    }\n}\n","import {GET_VIDEO, NEXT_PAGE, getVideoSuccess, getVideoFail, loadNextPage, LOAD_NEXT_PAGE} from './Actions'\nimport { applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst videoMiddleware = store => next => action => {\n    const { inputValue } = store.getState()\n    const { pageToken } = store.getState()\n        if(action.type === GET_VIDEO) {\n        \n        fetch(`https://www.googleapis.com/youtube/v3/search?key=AIzaSyCBXncyPqklIkgsMVDa5foLuTt8pI_K1O0&type=video&part=snippet&maxResults=15&q=${inputValue}`)\n        .then(res => res.json())\n            .then(data => {\n                const action = getVideoSuccess({videos: data.items, pageToken: data.nextPageToken})\n                store.dispatch(action)\n                \n            })\n            .catch(() => {\n            store.dispatch(getVideoFail())\n        })\n    }\n    if(action.type === NEXT_PAGE) {\n        fetch(`https://www.googleapis.com/youtube/v3/search?key=AIzaSyCBXncyPqklIkgsMVDa5foLuTt8pI_K1O0&type=video&part=snippet&maxResults=15&q=${inputValue}&pageToken=${pageToken}`)\n        .then(res => res.json())\n        .then(data => {\n            const action = loadNextPage({videos: data.items, pageToken: data.nextPageToken})\n            store.dispatch(action)\n        })\n    } \n    \n    next(action)\n}\n\nexport const rootMiddleware = composeWithDevTools(applyMiddleware(videoMiddleware)) ","import {GET_VIDEO,\n    GET_VIDEO_SUCCESS,\n    GET_VIDEO_FAIL,\n    SET_INPUT_VALUE,\n    NEXT_PAGE,\n    PREVIOUS_PAGE,\n    LOAD_NEXT_PAGE,\n    LOAD_PREVIOUS_PAGE} from './Actions'\n\nconst initialState = {\n    videos: [],\n    loading: false,\n    inputValue: '',\n    // currentPage: 1,\n    // previousPage: -1,\n    translation: 0,\n    pageToken: '',\n    localStorage: ''\n}\n\nexport function videoReducer(state = initialState, action) {\n    switch(action.type) {\n        case GET_VIDEO: {\n            return {\n                ...state,\n                loading: true,\n            }\n        }\n        case GET_VIDEO_SUCCESS: {\n            return {\n                ...state,\n                videos: [...action.payload.videos],\n                pageToken: action.payload.pageToken,\n                loading: false,\n                currentPage: 1,\n                previousPage: -1,\n                translation: 0,\n            }\n        }\n        case GET_VIDEO_FAIL: {\n            return {\n                ...state,\n                loading: false\n            }\n        }\n        case SET_INPUT_VALUE: {\n            return {\n                ...state,\n                inputValue: action.payload\n            }\n        }\n        case NEXT_PAGE: {\n            return {\n                ...state,\n                currentPage: state.currentPage + 1,\n                previousPage: state.previousPage + 1,\n                translation: -1600*state.currentPage\n            }\n        }\n        case PREVIOUS_PAGE: {\n            return {\n                ...state,\n                currentPage: state.currentPage - 1,\n                previousPage: state.previousPage - 1,\n                translation: -1600*state.previousPage\n            }\n        }\n        case LOAD_NEXT_PAGE: {\n            return {\n                ...state,\n                videos: [...state.videos, ...[...action.payload.videos]],\n                pageToken: action.payload.pageToken,\n                startValue: -1,\n                endValue: 3\n            }\n        }\n\n        case LOAD_PREVIOUS_PAGE: {\n            return {\n                ...state,\n                videos: [action.payload],\n                startValue: 44,\n                endValue: 48,\n            }\n        }\n        default: return state\n    }\n}","import { createStore } from 'redux'\nimport { rootMiddleware } from './Middleware'\nimport { videoReducer } from './Reducer'\nexport const store = createStore(videoReducer, rootMiddleware)\n","import { store } from './Store'\nexport default store","import React from 'react';\nimport { Form } from './Components/Template/Form'\nimport { Provider } from 'react-redux';\nimport store from './Components/Redux'\nimport { useDispatch } from 'react-redux'\n\nfunction App() {\n    store.subscribe(()=> console.log(store.getState()))\n  return (\n    <div>\n      <Form></Form>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport {store} from './Components/Redux/Store'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}